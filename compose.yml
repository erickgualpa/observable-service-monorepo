services:
  mysql-for-backend-kotlin:
    image: "mysql:latest"
    environment:
      - MYSQL_DATABASE=wis
      - MYSQL_USER=wis-db-user
      - MYSQL_PASSWORD=wis-db-pw
      - MYSQL_ROOT_PASSWORD=wis-db-pw
    ports:
      - '3306:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 2s
      timeout: 10s
      retries: 30
      start_period: 30s
    networks:
      - backend

  mysql-for-backend-java:
    image: "mysql:latest"
    environment:
      - MYSQL_DATABASE=wis
      - MYSQL_USER=wis-db-user
      - MYSQL_PASSWORD=wis-db-pw
      - MYSQL_ROOT_PASSWORD=wis-db-pw
    ports:
      - '3307:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 2s
      timeout: 10s
      retries: 30
      start_period: 30s
    networks:
      - backend

  backend-kotlin:
    image: backend-kotlin:dev
    build:
      dockerfile: backend-kotlin/Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      mysql-for-backend-kotlin:
        condition: service_healthy
    networks:
      - backend

  backend-java:
    image: backend-java:dev
    build:
      dockerfile: backend-java/Dockerfile
    ports:
      - '8081:8080'
    depends_on:
      mysql-for-backend-java:
        condition: service_healthy
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  mailcatcher:
    image: dockage/mailcatcher
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - backend

  grafana:
    image: grafana/grafana:10.0.1
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=egualpam
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=mailcatcher:1025
    depends_on:
      - prometheus
      - mailcatcher
    volumes:
      - ./grafana/setup/provisioning:/etc/grafana/provisioning
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://grafana:3000/api/health" ]
      interval: 2s
      retries: 30
    networks:
      - backend

  # Workaround used to run the init script for the 'grafana' service
  init_grafana:
    image: grafana/grafana:10.0.1
    environment:
      - GRAFANA_USER=admin
      - GRAFANA_PASSWORD=egualpam
    depends_on:
      grafana:
        condition: service_healthy
    volumes:
      - ./grafana:/etc/grafana/init/
      - ./grafana/setup/init_grafana.sh:/init_grafana.sh
    working_dir: "/"
    entrypoint: [ "/bin/bash", "-c", "/init_grafana.sh" ]
    networks:
      - backend

networks:
  backend:
    driver: bridge